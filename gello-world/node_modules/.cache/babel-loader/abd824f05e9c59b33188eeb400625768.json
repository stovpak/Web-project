{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\uzr\\\\folder\\\\gello-world\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\uzr\\\\folder\\\\gello-world\\\\src\\\\components\\\\login\\\\login.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n/*import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport class Login extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.setState = {\r\n\t\t\tusername: '',\r\n\t\t\tpassword: ''\r\n\t\t};\r\n\t\tthis.handlePasswordChange = this.handlePasswordChange.bind(this);\r\n\t\tthis.handleUserChange = this.handleUserChange.bind(this);\r\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\r\n\t}\r\n\thandleUserChange(e) {\r\n\t\tconsole.log(this.setState({ username: e.target.value }));\r\n\t}\r\n\thandlePasswordChange(e) {\r\n\t\tthis.setState({ password: e.target.value });\r\n\t}\r\n\thandleSubmit(e) {\r\n\t\te.preventDefault();\r\n\t\tconsole.log('server worj');\r\n\t\tconsole.log(this.state);\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className='base-container'>\r\n\t\t\t\t<div className='header'>Login</div>\r\n\t\t\t\t<div className='content'>\r\n\t\t\t\t\t<div className='form'>\r\n\t\t\t\t\t\t<form onSubmit={this.handleSubmit}>\r\n\t\t\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t\t\t<label htmlFor='username'>Username</label>\r\n\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\t\t\tname='username'\r\n\t\t\t\t\t\t\t\t\tplaceholder='username'\r\n\t\t\t\t\t\t\t\t\tonChange={this.handleUserChange}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t\t\t<label htmlFor='password'>Password</label>\r\n\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\ttype='password'\r\n\t\t\t\t\t\t\t\t\tname='password'\r\n\t\t\t\t\t\t\t\t\tplaceholder='password'\r\n\t\t\t\t\t\t\t\t\tonChange={this.handlePasswordChange}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</form>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='footer'>\r\n\t\t\t\t\t<button type='button' className='btn'>\r\n\t\t\t\t\t\tLogin\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\nexport default Login;*/\n// Render Prop\nimport React from 'react';\n\nclass MiniFormic extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      values: this.props.initialValues || {},\n      touched: {},\n      errors: {}\n    };\n\n    this.handleChange = event => {\n      const target = event.target;\n      const value = target.type === 'checkbox' ? target.checked : target.value;\n      const name = target.name;\n      event.persist();\n      this.setState(prevState => ({\n        values: _objectSpread({}, prevState.values, {\n          [name]: value\n        })\n      }));\n    };\n\n    this.handleBlur = event => {\n      const target = event.target;\n      const name = target.name;\n      event.persist();\n      this.setState(prevState => ({\n        touched: _objectSpread({}, prevState.touched, {\n          [name]: true\n        })\n      }));\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n    };\n  }\n\n  render() {\n    return this.props.children(_objectSpread({}, this.state, {\n      handleChange: this.handleChange,\n      handleBlur: this.handleBlur\n    }));\n  }\n\n}\n\nclass Reservation extends React.Component {\n  render() {\n    return React.createElement(MiniFormik, {\n      initialValues: {\n        isGoing: true,\n        numberOfGuests: 2\n      },\n      onSubmit: values => alert(JSON.stringify(values, null, 2)),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, props => {\n      const values = props.values,\n            errors = props.errors,\n            touched = props.touched,\n            handleBlur = props.handleBlur,\n            handleSubmit = props.handleSubmit,\n            handleChange = props.handleChange;\n      return React.createElement(\"form\", {\n        onSubmit: handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        name: \"isGoing\",\n        type: \"checkbox\",\n        className: \"checkbox\",\n        checked: values.isGoing,\n        onChange: handleChange,\n        onBlur: handleBlur,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, \"Is going:\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, \"Number of guests:\", React.createElement(\"input\", {\n        name: \"numberOfGuests\",\n        type: \"number\",\n        value: values.numberOfGuests,\n        onChange: handleChange,\n        onBlur: handleBlur,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      })), React.createElement(\"pre\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, JSON.stringify(props, null, 2)));\n    });\n  }\n\n}","map":{"version":3,"sources":["C:/Users/uzr/folder/gello-world/src/components/login/login.jsx"],"names":["React","MiniFormic","Component","state","values","props","initialValues","touched","errors","handleChange","event","target","value","type","checked","name","persist","setState","prevState","handleBlur","handleSubmit","e","preventDefault","render","children","Reservation","isGoing","numberOfGuests","alert","JSON","stringify"],"mappings":"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","sourcesContent":["/*import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport class Login extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.setState = {\r\n\t\t\tusername: '',\r\n\t\t\tpassword: ''\r\n\t\t};\r\n\t\tthis.handlePasswordChange = this.handlePasswordChange.bind(this);\r\n\t\tthis.handleUserChange = this.handleUserChange.bind(this);\r\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\r\n\t}\r\n\thandleUserChange(e) {\r\n\t\tconsole.log(this.setState({ username: e.target.value }));\r\n\t}\r\n\thandlePasswordChange(e) {\r\n\t\tthis.setState({ password: e.target.value });\r\n\t}\r\n\thandleSubmit(e) {\r\n\t\te.preventDefault();\r\n\t\tconsole.log('server worj');\r\n\t\tconsole.log(this.state);\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className='base-container'>\r\n\t\t\t\t<div className='header'>Login</div>\r\n\t\t\t\t<div className='content'>\r\n\t\t\t\t\t<div className='form'>\r\n\t\t\t\t\t\t<form onSubmit={this.handleSubmit}>\r\n\t\t\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t\t\t<label htmlFor='username'>Username</label>\r\n\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\t\t\tname='username'\r\n\t\t\t\t\t\t\t\t\tplaceholder='username'\r\n\t\t\t\t\t\t\t\t\tonChange={this.handleUserChange}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t\t\t<label htmlFor='password'>Password</label>\r\n\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\ttype='password'\r\n\t\t\t\t\t\t\t\t\tname='password'\r\n\t\t\t\t\t\t\t\t\tplaceholder='password'\r\n\t\t\t\t\t\t\t\t\tonChange={this.handlePasswordChange}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</form>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='footer'>\r\n\t\t\t\t\t<button type='button' className='btn'>\r\n\t\t\t\t\t\tLogin\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\nexport default Login;*/\r\n// Render Prop\r\nimport React from 'react';\r\nclass MiniFormic extends React.Component {\r\n\tstate = {\r\n\t\tvalues: this.props.initialValues || {},\r\n\t\ttouched: {},\r\n\t\terrors: {}\r\n\t};\r\n\thandleChange = event => {\r\n\t\tconst target = event.target;\r\n\t\tconst value = target.type === 'checkbox' ? target.checked : target.value;\r\n\t\tconst name = target.name;\r\n\t\tevent.persist();\r\n\t\tthis.setState(prevState => ({\r\n\t\t\tvalues: { ...prevState.values, [name]: value }\r\n\t\t}));\r\n\t};\r\n\thandleBlur = event => {\r\n\t\tconst target = event.target;\r\n\t\tconst name = target.name;\r\n\t\tevent.persist();\r\n\t\tthis.setState(prevState => ({\r\n\t\t\ttouched: { ...prevState.touched, [name]: true }\r\n\t\t}));\r\n\t};\r\n\thandleSubmit = e => {\r\n\t\te.preventDefault();\r\n\t};\r\n\trender() {\r\n\t\treturn this.props.children({\r\n\t\t\t...this.state,\r\n\t\t\thandleChange: this.handleChange,\r\n\t\t\thandleBlur: this.handleBlur\r\n\t\t});\r\n\t}\r\n}\r\nclass Reservation extends React.Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<MiniFormik\r\n\t\t\t\tinitialValues={{\r\n\t\t\t\t\tisGoing: true,\r\n\t\t\t\t\tnumberOfGuests: 2\r\n\t\t\t\t}}\r\n\t\t\t\tonSubmit={values => alert(JSON.stringify(values, null, 2))}>\r\n\t\t\t\t{props => {\r\n\t\t\t\t\tconst {\r\n\t\t\t\t\t\tvalues,\r\n\t\t\t\t\t\terrors,\r\n\t\t\t\t\t\ttouched,\r\n\t\t\t\t\t\thandleBlur,\r\n\t\t\t\t\t\thandleSubmit,\r\n\t\t\t\t\t\thandleChange\r\n\t\t\t\t\t} = props;\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<form onSubmit={handleSubmit}>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\tname='isGoing'\r\n\t\t\t\t\t\t\t\ttype='checkbox'\r\n\t\t\t\t\t\t\t\tclassName='checkbox'\r\n\t\t\t\t\t\t\t\tchecked={values.isGoing}\r\n\t\t\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\t\t\tonBlur={handleBlur}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<label>Is going:</label>\r\n\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t<label>\r\n\t\t\t\t\t\t\t\tNumber of guests:\r\n\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\tname='numberOfGuests'\r\n\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\tvalue={values.numberOfGuests}\r\n\t\t\t\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\t\t\t\tonBlur={handleBlur}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t<pre>{JSON.stringify(props, null, 2)}</pre>\r\n\t\t\t\t\t\t</form>\r\n\t\t\t\t\t);\r\n\t\t\t\t}}\r\n\t\t\t</MiniFormik>\r\n\t\t);\r\n\t}\r\n}\r\n"]},"metadata":{},"sourceType":"module"}