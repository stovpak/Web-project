{"ast":null,"code":"/**\r\n * Copyright (c) 2014-present, Facebook, Inc.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n */\n'use strict';\n\nvar _assign = require('object-assign');\n\nvar PooledClass = require('./PooledClass');\n\nvar Transaction = require('./Transaction');\n\nvar ReactInstrumentation = require('./ReactInstrumentation');\n\nvar ReactServerUpdateQueue = require('./ReactServerUpdateQueue');\n/**\r\n * Executed within the scope of the `Transaction` instance. Consider these as\r\n * being member methods, but with an implied ordering while being isolated from\r\n * each other.\r\n */\n\n\nvar TRANSACTION_WRAPPERS = [];\n\nif (process.env.NODE_ENV !== 'production') {\n  TRANSACTION_WRAPPERS.push({\n    initialize: ReactInstrumentation.debugTool.onBeginFlush,\n    close: ReactInstrumentation.debugTool.onEndFlush\n  });\n}\n\nvar noopCallbackQueue = {\n  enqueue: function () {}\n};\n/**\r\n * @class ReactServerRenderingTransaction\r\n * @param {boolean} renderToStaticMarkup\r\n */\n\nfunction ReactServerRenderingTransaction(renderToStaticMarkup) {\n  this.reinitializeTransaction();\n  this.renderToStaticMarkup = renderToStaticMarkup;\n  this.useCreateElement = false;\n  this.updateQueue = new ReactServerUpdateQueue(this);\n}\n\nvar Mixin = {\n  /**\r\n   * @see Transaction\r\n   * @abstract\r\n   * @final\r\n   * @return {array} Empty list of operation wrap procedures.\r\n   */\n  getTransactionWrappers: function () {\n    return TRANSACTION_WRAPPERS;\n  },\n\n  /**\r\n   * @return {object} The queue to collect `onDOMReady` callbacks with.\r\n   */\n  getReactMountReady: function () {\n    return noopCallbackQueue;\n  },\n\n  /**\r\n   * @return {object} The queue to collect React async events.\r\n   */\n  getUpdateQueue: function () {\n    return this.updateQueue;\n  },\n\n  /**\r\n   * `PooledClass` looks for this, and will invoke this before allowing this\r\n   * instance to be reused.\r\n   */\n  destructor: function () {},\n  checkpoint: function () {},\n  rollback: function () {}\n};\n\n_assign(ReactServerRenderingTransaction.prototype, Transaction, Mixin);\n\nPooledClass.addPoolingTo(ReactServerRenderingTransaction);\nmodule.exports = ReactServerRenderingTransaction;","map":null,"metadata":{},"sourceType":"script"}