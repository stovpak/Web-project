{"ast":null,"code":"/**\r\n * Copyright (c) 2013-present, Facebook, Inc.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n */\n'use strict';\n\nvar ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\n\nvar escapeTextContentForBrowser = require('./escapeTextContentForBrowser');\n\nvar setInnerHTML = require('./setInnerHTML');\n/**\r\n * Set the textContent property of a node, ensuring that whitespace is preserved\r\n * even in IE8. innerText is a poor substitute for textContent and, among many\r\n * issues, inserts <br> instead of the literal newline chars. innerHTML behaves\r\n * as it should.\r\n *\r\n * @param {DOMElement} node\r\n * @param {string} text\r\n * @internal\r\n */\n\n\nvar setTextContent = function (node, text) {\n  if (text) {\n    var firstChild = node.firstChild;\n\n    if (firstChild && firstChild === node.lastChild && firstChild.nodeType === 3) {\n      firstChild.nodeValue = text;\n      return;\n    }\n  }\n\n  node.textContent = text;\n};\n\nif (ExecutionEnvironment.canUseDOM) {\n  if (!('textContent' in document.documentElement)) {\n    setTextContent = function (node, text) {\n      if (node.nodeType === 3) {\n        node.nodeValue = text;\n        return;\n      }\n\n      setInnerHTML(node, escapeTextContentForBrowser(text));\n    };\n  }\n}\n\nmodule.exports = setTextContent;","map":null,"metadata":{},"sourceType":"script"}