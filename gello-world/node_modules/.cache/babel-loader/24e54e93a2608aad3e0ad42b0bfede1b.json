{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\uzr\\\\Desktop\\\\qwerty\\\\darina_privet\\\\gello-world\\\\src\\\\components\\\\login\\\\login.jsx\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nexport class Login extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.validate = () => {\n      let usernameError = ''; //\tlet passwordError= '';\n\n      if (this.state.username.includes('.', ',', '@')) {\n        usernameError = 'invaalid eusername';\n      }\n\n      if (usernameError) {\n        this.state({\n          usernameError\n        });\n        return false;\n      }\n\n      return true;\n    };\n\n    this.state = {\n      username: '',\n      password: '',\n      isChecked: false,\n      errors: {\n        Username: '',\n        password: '',\n        usernameError: '',\n        passwordError: ''\n      }\n    };\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n    this.handleUserChange = this.handleUserChange.bind(this);\n    this.handleChecked = this.handleChecked.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleUserChange(e) {\n    this.setState({\n      username: e.target.value\n    });\n    console.log(this.state.username);\n  }\n\n  handlePasswordChange(e) {\n    this.setState({\n      password: e.target.value\n    });\n    console.log(this.state.password);\n  }\n\n  handleChecked() {\n    this.setState({\n      isChecked: !this.state.isChecked\n    });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    const isValid = this.validate();\n\n    if (isValid) {\n      console.log(this.state);\n    }\n  }\n\n  signin() {\n    axios.post('/', {\n      username: this.state.username,\n      passsword: this.state.password\n    }).then(response => {\n      console.log(response);\n    }, error => {\n      console.log(error);\n    });\n  }\n\n  render() {\n    var txt;\n\n    if (this.state.isChecked) {\n      txt = 'checked';\n    } else {\n      txt = 'unchecked';\n    }\n\n    return React.createElement(\"div\", {\n      className: \"body-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"login-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Sing In\"), React.createElement(\"div\", {\n      className: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: e => this.handleSubmit(e),\n      method: \"post\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"username-field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Username\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"username\",\n      className: \"form-control\",\n      id: \"username-field\",\n      value: this.state.username,\n      placeholder: \"username\",\n      onChange: e => this.handleUserChange(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    })), this.state.username ? React.createElement(\"div\", {\n      style: {\n        color: 'red'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, this.state.usernameError) : null, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"password-field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"Password\"), React.createElement(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      id: \"password-field\",\n      value: this.state.password,\n      className: \"form-control\",\n      placeholder: \"password\",\n      onChange: e => this.handlePasswordChange(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"checkbox-field\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"rememder me?\"), React.createElement(\"input\", {\n      type: \"checkbox\",\n      name: \"checkbox\",\n      id: \"checkbox-field\",\n      value: this.state.checkbox,\n      className: \"form-control\",\n      onChange: e => this.handleCheckboxChange(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      style: {\n        color: 'red'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, this.state.usernameError), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      onClick: e => this.signin(),\n      className: \"btn btn-primary btn-block\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"Sign in\")), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      onClick: e => this.signin(),\n      className: \"btn btn-primary btn-block\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, \"Sign up\"))))));\n  }\n\n}\nexport default Login; // Render Prop\n\n/*import React from 'react';\r\nclass MiniFormic extends React.Component {\r\n\tstate = {\r\n\t\tvalues: this.props.initialValues || {},\r\n\t\ttouched: {},\r\n\t\terrors: {}\r\n\t};\r\n\thandleChange = event => {\r\n\t\tconst target = event.target;\r\n\t\tconst value = target.type === 'checkbox' ? target.checked : target.value;\r\n\t\tconst name = target.name;\r\n\t\tevent.persist();\r\n\t\tthis.setState(prevState => ({\r\n\t\t\tvalues: { ...prevState.values, [name]: value }\r\n\t\t}));\r\n\t};\r\n\thandleBlur = event => {\r\n\t\tconst target = event.target;\r\n\t\tconst name = target.name;\r\n\t\tevent.persist();\r\n\t\tthis.setState(prevState => ({\r\n\t\t\ttouched: { ...prevState.touched, [name]: true }\r\n\t\t}));\r\n\t};\r\n\thandleSubmit = e => {\r\n\t\te.preventDefault();\r\n\t};\r\n\trender() {\r\n\t\treturn this.props.children({\r\n\t\t\t...this.state,\r\n\t\t\thandleChange: this.handleChange,\r\n\t\t\thandleBlur: this.handleBlur\r\n\t\t});\r\n\t}\r\n}\r\n/*export class Reservation extends React.Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<MiniFormic\r\n\t\t\t\tinitialValues={{\r\n\t\t\t\t\tisGoing: true,\r\n\t\t\t\t\tnumberOfGuests: 2\r\n\t\t\t\t}}\r\n\t\t\t\tonSubmit={values => alert(JSON.stringify(values, null, 2))}>\r\n\t\t\t\t{props => {\r\n\t\t\t\t\tconst {\r\n\t\t\t\t\t\tvalues,\r\n\t\t\t\t\t\terrors,\r\n\t\t\t\t\t\ttouched,\r\n\t\t\t\t\t\thandleBlur,\r\n\t\t\t\t\t\thandleSubmit,\r\n\t\t\t\t\t\thandleChange\r\n\t\t\t\t\t} = props;\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<form onSubmit={handleSubmit}>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\tname='isGoing'\r\n\t\t\t\t\t\t\t\ttype='checkbox'\r\n\t\t\t\t\t\t\t\tclassName='checkbox'\r\n\t\t\t\t\t\t\t\tchecked={values.isGoing}\r\n\t\t\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\t\t\tonBlur={handleBlur}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<label>Is going:</label>\r\n\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t<label>\r\n\t\t\t\t\t\t\t\tNumber of guests:\r\n\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\tname='numberOfGuests'\r\n\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\tvalue={values.numberOfGuests}\r\n\t\t\t\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\t\t\t\tonBlur={handleBlur}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t<pre>{JSON.stringify(props, null, 2)}</pre>\r\n\t\t\t\t\t\t</form>\r\n\t\t\t\t\t);\r\n\t\t\t\t}}\r\n\t\t\t</MiniFormic>\r\n\t\t);\r\n\t}\r\n}\r\n*/","map":{"version":3,"sources":["C:/Users/uzr/Desktop/qwerty/darina_privet/gello-world/src/components/login/login.jsx"],"names":["React","Component","axios","Login","constructor","props","validate","usernameError","state","username","includes","password","isChecked","errors","Username","passwordError","handlePasswordChange","bind","handleUserChange","handleChecked","handleSubmit","e","setState","target","value","console","log","preventDefault","isValid","signin","post","passsword","then","response","error","render","txt","color","checkbox","handleCheckboxChange"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nexport class Login extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tusername: '',\r\n\t\t\tpassword: '',\r\n\t\t\tisChecked: false,\r\n\t\t\terrors: {\r\n\t\t\t\tUsername: '',\r\n\t\t\t\tpassword: '',\r\n\t\t\t\tusernameError: '',\r\n\t\t\t\tpasswordError: ''\r\n\t\t\t}\r\n\t\t};\r\n\t\tthis.handlePasswordChange = this.handlePasswordChange.bind(this);\r\n\t\tthis.handleUserChange = this.handleUserChange.bind(this);\r\n\t\tthis.handleChecked = this.handleChecked.bind(this);\r\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\r\n\t}\r\n\thandleUserChange(e) {\r\n\t\tthis.setState({ username: e.target.value });\r\n\t\tconsole.log(this.state.username);\r\n\t}\r\n\thandlePasswordChange(e) {\r\n\t\tthis.setState({ password: e.target.value });\r\n\t\tconsole.log(this.state.password);\r\n\t}\r\n\thandleChecked() {\r\n\t\tthis.setState({ isChecked: !this.state.isChecked });\r\n\t}\r\n\thandleSubmit(e) {\r\n\t\te.preventDefault();\r\n\t\tconst isValid = this.validate();\r\n\t\tif (isValid) {\r\n\t\t\tconsole.log(this.state);\r\n\t\t}\r\n\t}\r\n\r\n\tvalidate = () => {\r\n\t\tlet usernameError = '';\r\n\t\t//\tlet passwordError= '';\r\n\t\tif (this.state.username.includes('.', ',', '@')) {\r\n\t\t\tusernameError = 'invaalid eusername';\r\n\t\t}\r\n\t\tif (usernameError) {\r\n\t\t\tthis.state({ usernameError });\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\treturn true;\r\n\t};\r\n\tsignin() {\r\n\t\taxios\r\n\t\t\t.post('/', {\r\n\t\t\t\tusername: this.state.username,\r\n\t\t\t\tpasssword: this.state.password\r\n\t\t\t})\r\n\t\t\t.then(\r\n\t\t\t\tresponse => {\r\n\t\t\t\t\tconsole.log(response);\r\n\t\t\t\t},\r\n\t\t\t\terror => {\r\n\t\t\t\t\tconsole.log(error);\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t}\r\n\r\n\trender() {\r\n\t\tvar txt;\r\n\t\tif (this.state.isChecked) {\r\n\t\t\ttxt = 'checked';\r\n\t\t} else {\r\n\t\t\ttxt = 'unchecked';\r\n\t\t}\r\n\t\treturn (\r\n\t\t\t<div className='body-container'>\r\n\t\t\t\t<h2 className='login-form'>Sing In</h2>\r\n\t\t\t\t<div className='content'>\r\n\t\t\t\t\t<div className='form'>\r\n\t\t\t\t\t\t<form onSubmit={e => this.handleSubmit(e)} method='post'>\r\n\t\t\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t\t\t<label htmlFor='username-field'>Username</label>\r\n\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\t\t\tname='username'\r\n\t\t\t\t\t\t\t\t\tclassName='form-control'\r\n\t\t\t\t\t\t\t\t\tid='username-field'\r\n\t\t\t\t\t\t\t\t\tvalue={this.state.username}\r\n\t\t\t\t\t\t\t\t\tplaceholder='username'\r\n\t\t\t\t\t\t\t\t\tonChange={e => this.handleUserChange(e)}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t{this.state.username ? (\r\n\t\t\t\t\t\t\t\t<div style={{ color: 'red' }}>{this.state.usernameError}</div>\r\n\t\t\t\t\t\t\t) : null}\r\n\t\t\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t\t\t<label htmlFor='password-field'>Password</label>\r\n\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\ttype='password'\r\n\t\t\t\t\t\t\t\t\tname='password'\r\n\t\t\t\t\t\t\t\t\tid='password-field'\r\n\t\t\t\t\t\t\t\t\tvalue={this.state.password}\r\n\t\t\t\t\t\t\t\t\tclassName='form-control'\r\n\t\t\t\t\t\t\t\t\tplaceholder='password'\r\n\t\t\t\t\t\t\t\t\tonChange={e => this.handlePasswordChange(e)}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t\t\t<label htmlFor='checkbox-field'>rememder me?</label>\r\n\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\ttype='checkbox'\r\n\t\t\t\t\t\t\t\t\tname='checkbox'\r\n\t\t\t\t\t\t\t\t\tid='checkbox-field'\r\n\t\t\t\t\t\t\t\t\tvalue={this.state.checkbox}\r\n\t\t\t\t\t\t\t\t\tclassName='form-control'\r\n\t\t\t\t\t\t\t\t\tonChange={e => this.handleCheckboxChange(e)}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<div style={{ color: 'red' }}>{this.state.usernameError}</div>\r\n\t\t\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\ttype='button'\r\n\t\t\t\t\t\t\t\t\tonClick={e => this.signin()}\r\n\t\t\t\t\t\t\t\t\tclassName='btn btn-primary btn-block'>\r\n\t\t\t\t\t\t\t\t\tSign in\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className='form-group'>\r\n\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\ttype='button'\r\n\t\t\t\t\t\t\t\t\tonClick={e => this.signin()}\r\n\t\t\t\t\t\t\t\t\tclassName='btn btn-primary btn-block'>\r\n\t\t\t\t\t\t\t\t\tSign up\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</form>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\nexport default Login;\r\n\r\n// Render Prop\r\n/*import React from 'react';\r\nclass MiniFormic extends React.Component {\r\n\tstate = {\r\n\t\tvalues: this.props.initialValues || {},\r\n\t\ttouched: {},\r\n\t\terrors: {}\r\n\t};\r\n\thandleChange = event => {\r\n\t\tconst target = event.target;\r\n\t\tconst value = target.type === 'checkbox' ? target.checked : target.value;\r\n\t\tconst name = target.name;\r\n\t\tevent.persist();\r\n\t\tthis.setState(prevState => ({\r\n\t\t\tvalues: { ...prevState.values, [name]: value }\r\n\t\t}));\r\n\t};\r\n\thandleBlur = event => {\r\n\t\tconst target = event.target;\r\n\t\tconst name = target.name;\r\n\t\tevent.persist();\r\n\t\tthis.setState(prevState => ({\r\n\t\t\ttouched: { ...prevState.touched, [name]: true }\r\n\t\t}));\r\n\t};\r\n\thandleSubmit = e => {\r\n\t\te.preventDefault();\r\n\t};\r\n\trender() {\r\n\t\treturn this.props.children({\r\n\t\t\t...this.state,\r\n\t\t\thandleChange: this.handleChange,\r\n\t\t\thandleBlur: this.handleBlur\r\n\t\t});\r\n\t}\r\n}\r\n/*export class Reservation extends React.Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<MiniFormic\r\n\t\t\t\tinitialValues={{\r\n\t\t\t\t\tisGoing: true,\r\n\t\t\t\t\tnumberOfGuests: 2\r\n\t\t\t\t}}\r\n\t\t\t\tonSubmit={values => alert(JSON.stringify(values, null, 2))}>\r\n\t\t\t\t{props => {\r\n\t\t\t\t\tconst {\r\n\t\t\t\t\t\tvalues,\r\n\t\t\t\t\t\terrors,\r\n\t\t\t\t\t\ttouched,\r\n\t\t\t\t\t\thandleBlur,\r\n\t\t\t\t\t\thandleSubmit,\r\n\t\t\t\t\t\thandleChange\r\n\t\t\t\t\t} = props;\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<form onSubmit={handleSubmit}>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\tname='isGoing'\r\n\t\t\t\t\t\t\t\ttype='checkbox'\r\n\t\t\t\t\t\t\t\tclassName='checkbox'\r\n\t\t\t\t\t\t\t\tchecked={values.isGoing}\r\n\t\t\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\t\t\tonBlur={handleBlur}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<label>Is going:</label>\r\n\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t<label>\r\n\t\t\t\t\t\t\t\tNumber of guests:\r\n\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\tname='numberOfGuests'\r\n\t\t\t\t\t\t\t\t\ttype='number'\r\n\t\t\t\t\t\t\t\t\tvalue={values.numberOfGuests}\r\n\t\t\t\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\t\t\t\tonBlur={handleBlur}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t<pre>{JSON.stringify(props, null, 2)}</pre>\r\n\t\t\t\t\t\t</form>\r\n\t\t\t\t\t);\r\n\t\t\t\t}}\r\n\t\t\t</MiniFormic>\r\n\t\t);\r\n\t}\r\n}\r\n*/\r\n"]},"metadata":{},"sourceType":"module"}